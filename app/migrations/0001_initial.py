# Generated by Django 5.0.4 on 2024-04-22 21:04

import app.models.core
import app.models.fields
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email Address')),
                ('image', app.models.fields.ImageField(blank=True, null=True, upload_to='user_images')),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'M'), ('F', 'F'), ('O', 'O')], max_length=1, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, max_length=1024, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('image', app.models.fields.ImageField(upload_to='')),
                ('description', models.TextField()),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('session_id', models.CharField(blank=True, max_length=256, null=True)),
                ('checked_out', models.BooleanField(default=False)),
                ('items_count', models.PositiveSmallIntegerField(default=0)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=32)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=32)),
                ('checkout_email', models.EmailField(blank=True, max_length=256, null=True)),
                ('checkout_password', models.CharField(blank=True, max_length=32, null=True)),
                ('checkout_address', models.TextField(blank=True, max_length=1024, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=32)),
                ('method', models.CharField(choices=[('Cash', 'Cash'), ('Stripe', 'Stripe')], max_length=64)),
                ('status', models.CharField(choices=[(app.models.core.Payment.Statuses['pending'], app.models.core.Payment.Statuses['pending']), (app.models.core.Payment.Statuses['cancelled'], app.models.core.Payment.Statuses['cancelled']), (app.models.core.Payment.Statuses['completed'], app.models.core.Payment.Statuses['completed'])], max_length=64)),
                ('gateway_id', models.CharField(blank=True, max_length=256, null=True)),
                ('gateway_url', models.URLField(blank=True, max_length=512, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.invoice')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('image', app.models.fields.ImageField(upload_to='')),
                ('design_image', app.models.fields.ImageField(blank=True, null=True, upload_to='')),
                ('image_1', app.models.fields.ImageField(blank=True, null=True, upload_to='')),
                ('image_2', app.models.fields.ImageField(blank=True, null=True, upload_to='')),
                ('image_3', app.models.fields.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=32)),
                ('stock_qty', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.category')),
                ('similar', models.ManyToManyField(blank=True, to='app.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('qty', models.PositiveSmallIntegerField(default=1)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=32)),
                ('line_total', models.DecimalField(blank=True, decimal_places=2, max_digits=32)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.invoice')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateField(auto_now=True)),
                ('edit_timestamp', models.DateTimeField(auto_now=True)),
                ('currency', models.CharField(choices=[('eur', 'eur'), ('usd', 'usd')], default=app.models.core.Settings.Currencies['euro'], max_length=16)),
                ('featured_products', models.ManyToManyField(blank=True, to='app.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
